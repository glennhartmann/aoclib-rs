var searchIndex = new Map(JSON.parse('[["anyhow",{"t":"FKPFHPIQNNNQNNNNNNNNMNNNNNNNNQNNENNNNNNNNNNNNNNNNNNNNNNNNM","n":["Chain","Context","Err","Error","Ok","","Result","anyhow","as_ref","","backtrace","bail","borrow","","borrow_mut","","chain","clone","clone_into","clone_to_uninit","context","","default","deref","deref_mut","downcast","downcast_mut","downcast_ref","drop","ensure","fmt","","format_err","from","","","","into","","into_iter","is","len","msg","new","","next","next_back","root_cause","size_hint","to_owned","to_string","try_from","","try_into","","type_id","","with_context"],"q":[[0,"anyhow"],[58,"core::error"],[59,"std::backtrace"],[60,"core::fmt"],[61,"core::marker"],[62,"core::result"],[63,"core::option"],[64,"alloc::string"],[65,"core::any"],[66,"core::ops::function"]],"i":"``b``0``d00`0n101000Ab21222222`22`2221211212211121122121210","f":"````{c{{b{c}}}{}}```{{{f{d}}}{{f{h}}}}0{{{f{d}}}{{f{j}}}}`{f{{f{c}}}{}}0{{{f{l}}}{{f{lc}}}{}}0{{{f{d}}}n}{{{f{n}}}n}{{f{f{lc}}}A`{}}{fA`}{{Abc}{{b{ed}}}{AdAfAh}{}}{{dc}d{AdAfAh}}{{}n}{{{f{d}}}{{f{c}}}{}}{{{f{ld}}}{{f{lc}}}{}}{d{{Aj{cd}}}{AdAlAfAh}}{{{f{ld}}}{{An{{f{lc}}}}}{AdAlAfAh}}{{{f{d}}}{{An{{f{c}}}}}{AdAlAfAh}}{{{f{ld}}}A`}`{{{f{d}}{f{lB`}}}Bb}0`{cd{hAfAh}}{Bdc{}}{cc{}}0{{}c{}}00{{{f{d}}}Bf}{{{f{n}}}Bh}{cd{AdAlAfAh}}6{{{f{h}}}n}{{{f{ln}}}{{An{c}}}{}}0{{{f{d}}}{{f{h}}}}{{{f{n}}}{{Bj{Bh{An{Bh}}}}}}{fc{}}{fBl}{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{fBn}0{{Abe}{{b{gd}}}{AdAfAh}{{Cb{}{{C`{c}}}}}{}}","D":"Cf","p":[[8,"Result",0],[5,"Error",0],[1,"reference"],[10,"Error",58],[5,"Backtrace",59],[0,"mut"],[5,"Chain",0],[1,"unit"],[10,"Context",0],[10,"Display",60],[10,"Send",61],[10,"Sync",61],[6,"Result",62],[10,"Debug",60],[6,"Option",63],[5,"Formatter",60],[8,"Result",60],[1,"never"],[1,"bool"],[1,"usize"],[1,"tuple"],[5,"String",64],[5,"TypeId",65],[17,"Output"],[10,"FnOnce",66]],"r":[],"b":[[8,"impl-AsRef%3Cdyn+Error%3E-for-Error"],[9,"impl-AsRef%3Cdyn+Error+%2B+Send+%2B+Sync%3E-for-Error"],[30,"impl-Debug-for-Error"],[31,"impl-Display-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB8ACgAJAAEADQADABIAAgAXAAIAHQAAAB8ABAAoAAAAKgAAAC0AAgAxAAgA"}],["aoclib_rs",{"t":"CCHHHHHQHHCHHRKRRRRRFKNNNNNNNMMNNNMNNMMNMNMNNNNGPGKPPPPPPPPNNNNNNNNNNNMNNNNNNNNNNNNMNNNNMNNMNNMNNMNNMNNNNNNNNNNFNNNNNNNNNNNNN","n":["dijkstra","dir","fwd_rev_incl_range","pad","pairwise_iter","position_2d","prep_io","printwriteln","split_and_parse","split_by_char","trie","u8_to_string","usize_plus_i","Bounds","Dijkstrable","Dist","","PQE","Point","","PqElement","PriorityQueueElement","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","dijkstra","dist","","","eq","from","init","","into","is_impossible","neighbours","partial_cmp","point","","set_dist","to_owned","try_from","try_into","type_id","Dir4","","Dir8","Direction","Down","DownLeft","DownRight","Left","Right","Up","UpLeft","UpRight","apply_delta_to_usizes","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","delta","","","eq","","fmt","","from","","hash","","into","","iter","","","iter_internal","iter_valid_usizes_deltas","opposite","","","rotate_left","","","rotate_left_90","","","rotate_right","","","rotate_right_90","","","to_owned","","try_from","","try_into","","type_id","","Trie","borrow","borrow_mut","default","find","from","insert","into","is_terminal","new","prefix","try_from","try_into","type_id"],"q":[[0,"aoclib_rs"],[13,"aoclib_rs::dijkstra"],[47,"aoclib_rs::dir"],[111,"aoclib_rs::trie"],[125,"core::iter::traits::iterator"],[126,"alloc::vec"],[127,"core::clone"],[128,"core::marker"],[129,"core::option"],[130,"core::ops::function"],[131,"alloc::string"],[132,"std::fs"],[133,"std::io::buffered::bufwriter"],[134,"anyhow"],[135,"core::str::traits"],[136,"core::ops::arith"],[137,"core::cmp"],[138,"core::result"],[139,"core::any"],[140,"core::fmt"],[141,"core::hash"]],"i":"`````````````Cn`0Db110``Bl000002210001002201020000`Dl``Dj1100011Dh121212121201212121212120120001201201201201212121212`Ef000000000000","f":"``{{bb}{{`{{f{}{{d{b}}}}}}}}{{{j{{l{{j{{h{c}}}}}}}}bc}{{l{{l{c}}}}}{nA`}}{{{j{{h{c}}}}}{{`{{f{}{{d{{Ab{cc}}}}}}}}}A`}{{{j{{h{{l{c}}}}}}e}{{Ad{{Ab{bb}}}}}{}{{Aj{{j{c}}}{{Af{Ah}}}}}}{{{j{AlAn}}B`}{{Bh{{Ab{{Bd{Bb}}{l{{j{Bf}}}}}}}}}}`{{{j{Bf}}{j{Bf}}}{{Bh{{l{c}}}}}Bj}{{{j{Bf}}}{{l{{j{Bf}}}}}}`{B`An}{{bc}b{}}`````````{j{{j{c}}}{}}{{{j{Al}}}{{j{Alc}}}{}}{{{j{{Bl{ce}}}}}{{Bl{ce}}}{A`n}{A`{Bn{}{{Af{}}}}C`n}}{{j{j{Alc}}}Cb{}}{jCb}{{{j{{Bl{ce}}}}{j{{Bl{ce}}}}}CdA`{A`{Bn{}{{Af{}}}}C`}}{{{j{Al{Cn{}{{Cf{c}}{Ch{e}}{Cj{g}}{Cl{i}}}}}}cge}CbA`{D`A`}{A`{Bn{}{{Af{g}}}}}{{Db{}{{Cf{c}}{Cj{g}}}}}}{{{j{{Cn{}{{Cf{c}}{Ch{e}}{Cj{g}}{Cl{i}}}}}}c}{{Ad{g}}}A`{D`A`}{A`{Bn{}{{Af{g}}}}}{{Db{}{{Cf{c}}{Cj{g}}}}}}{{{j{{Db{}{{Cf{c}}{Cj{e}}}}}}}e{}{{Bn{}{{Af{e}}}}}}{{{j{{Bl{ce}}}}}gA`{A`{Bn{}{{Af{}}}}C`}{}}{{{j{{Bl{ce}}}}{j{{Bl{ce}}}}}AhA`{A`{Bn{}{{Af{}}}}C`}}{cc{}}{{ce}{{Db{}{{Cf{c}}{Cj{e}}}}}{}{{Bn{}{{Af{e}}}}}}{{ce}{{Bl{gi}}}{}{}A`{A`{Bn{}{{Af{}}}}C`}}{{}c{}}{{{j{{Cn{}{{Cf{c}}{Ch{e}}{Cj{g}}{Cl{i}}}}}}c}AhA`{D`A`}{A`{Bn{}{{Af{g}}}}}{{Db{}{{Cf{c}}{Cj{g}}}}}}{{ce}{{`{{f{}{{d{{Ab{cg}}}}}}}}}{}{}{}}{{{j{{Bl{ce}}}}{j{{Bl{ce}}}}}{{Ad{Cd}}}A`{A`{Bn{}{{Af{}}}}C`}}{{{j{{Db{}{{Cf{c}}{Cj{e}}}}}}}c{}{{Bn{}{{Af{e}}}}}}9{{{j{Al{Cn{}{{Cf{c}}{Ch{e}}{Cj{g}}{Cl{i}}}}}}c{Ad{g}}}CbA`{D`A`}{A`{Bn{}{{Af{g}}}}}{{Db{}{{Cf{c}}{Cj{g}}}}}}{jc{}}{c{{Dd{e}}}{}{}}{{}{{Dd{c}}}{}}{jDf}````````````{{Dh{Ab{bb}}}{{Ab{bb}}}}{j{{j{c}}}{}}0{{{j{Al}}}{{j{Alc}}}{}}0{{{j{Dj}}}Dj}{{{j{Dl}}}Dl}{{j{j{Alc}}}Cb{}}0{jCb}0{Dh{{Ab{DnDn}}}}{Dj{{Ab{DnDn}}}}{Dl{{Ab{DnDn}}}}{{{j{Dj}}{j{Dj}}}Ah}{{{j{Dl}}{j{Dl}}}Ah}{{{j{Dj}}{j{AlE`}}}Eb}{{{j{Dl}}{j{AlE`}}}Eb}{cc{}}0{{{j{Dj}}{j{Alc}}}CbEd}{{{j{Dl}}{j{Alc}}}CbEd}{{}c{}}0{{}{{`{{f{}{{d{Dh}}}}}}}}{{}{{`{{f{}{{d{Dj}}}}}}}}{{}{{`{{f{}{{d{Dl}}}}}}}}{Dh{{`{{f{}{{d{Dh}}}}}}}}{{{Ab{bb}}{Ab{bb}}}{{`{{f{}{{d{{Ab{bb}}}}}}}}}}{DhDh}{DjDj}{DlDl}210210210210{jc{}}0{c{{Dd{e}}}{}{}}0{{}{{Dd{c}}}{}}0{jDf}0`{j{{j{c}}}{}}{{{j{Al}}}{{j{Alc}}}{}}{{}Ef}{{{j{Ef}}{j{Bf}}}{{Ad{{j{Ef}}}}}}{cc{}}{{{j{AlEf}}{j{Bf}}}Cb}{{}c{}}{{{j{Ef}}}Ah}5{{{j{Ef}}}{{j{Bf}}}};:9","D":"A`","p":[[1,"usize"],[17,"Item"],[10,"Iterator",125],[1,"slice"],[1,"reference"],[5,"Vec",126],[10,"Clone",127],[10,"Copy",128],[1,"tuple"],[6,"Option",129],[17,"Output"],[1,"bool"],[10,"FnMut",130],[0,"mut"],[5,"String",131],[1,"u8"],[5,"File",132],[5,"BufWriter",133],[1,"str"],[8,"Result",134],[10,"FromStr",135],[5,"PqElement",13],[10,"Add",136],[10,"Ord",137],[1,"unit"],[6,"Ordering",137],[17,"Point"],[17,"Bounds"],[17,"Dist"],[17,"PQE"],[10,"Dijkstrable",13],[10,"Sized",128],[10,"PriorityQueueElement",13],[6,"Result",138],[5,"TypeId",139],[10,"Direction",47],[6,"Dir4",47],[6,"Dir8",47],[1,"i8"],[5,"Formatter",140],[8,"Result",140],[10,"Hasher",141],[5,"Trie",111]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHUABwAAACEAIwABACYAJwBQAAEAVAAgAHYAAAB4AAUA"}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[2086,4667]}